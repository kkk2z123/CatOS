# OSが、動くには、どんな動作が必要化
OS開発には、OSが動く流れが理解できないと難しいと判断、書きます。
.......正直言うと、OS開発で、C言語使うこと多い(というか必須化してる)けどBASICで、カーネルとか書こうよ　元祖プログラミング言語BASIC使おうや
basicで、OS開発しようか＾＾
# 書くよ
#### 超あっさり
すごい簡略化すると。
UEFI/BIOS>boot>kernel>systemファイルリセッツ>OSくん起動
たしかこんな感じ
#### ちょっと細かく必要そうな処理を施工する。
どんな処理が必要だろうと考えよう!
1.16bitモードとかで、起動
2.CPUに変なコードが割り込んでこないよう線を貼る。
3.レジスタ類のコードをリセッツ
4.スタックポインタとか言うなんだかよくわからないものをブ(ry)タのアドレス（0x7C00）に指定。
 ↑ちゃんとした位置に設定するためらしい。
5.カーネルをロードするためのメモリアドレスをBXだかなんだかに設定くん mov bx, 0x1000:
6.ディスクヘッド番号を設定します。ヘッド0は通常の読み込みに使用されます。 
7.ドライブ番号を指定します。0は通常、フロッピーディスクドライブを指します。 
8.読み込むセクタ数を指定します。1セクタは通常512バイトです。
9.ディスク読み込みのBIOSサービスを呼び出すためのコマンドをAXレジスタに設定します。
10.BIOSのディスクI/Oサービスを呼び出して、指定されたメモリアドレスにカーネルを読み込みます。
11.カーネルがロードされたメモリアドレス（0x1000）にジャンプします。これにより、カーネルの実行が開始されます。
12.ブートセクタの残りの部分を0で埋めます。ブートセクタは通常512バイトであるため、残りの部分を0で埋めます。
13.ブートセクタの最後の2バイトには「0xAA55」というシグネチャを配置します。これはBIOSに対して、このセクタが有効なブートセクタであることを示します。
↑pythenに教えてもらいました。
まぁ　簡単だねｯ(意味不明すぎて脳死)
# 上手く理解
1.CPUに変な処理が入ってえらーらないようにする
2.レジスタに変な動作があると困るからリセット(エラー防止(?) )
3.